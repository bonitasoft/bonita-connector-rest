#Mon Oct 20 17:21:39 PDT 2014
REST.category=REST
connectorDefinitionDescription=このコネクタは、PUTのHTTP動詞をサポートするサードパーティRESTサーバーとの連携を可能にします。
connectorDefinitionLabel=PUT
RESTConnectorWizardPage.pageDescription=REST (PUT) コネクタの基本的な入力データを設定します。
RESTConnectorWizardPage.pageTitle=REST (PUT) リクエストの構成設定
SSLPage.pageDescription=RESTコネクタのSSLオプションを設定します。
SSLPage.pageTitle=SSLの構成設定
auth_type_radio.label=認証
auth_type_radio.description=Basic認証/Digest認証は、リクエスト作成時にユーザー名とパスワードを提供する\nHTTPユーザーエージェントのメソッドです。[なし]を選択した場合は、\n提供された情報は無視されます。
auth_group.label=認証情報
auth_host_widget.description=この認証情報を適用するホスト。認証情報があらゆるホストに適用可能な場合は空白またはnullにします。
auth_host_widget.label=ホスト
auth_port_widget.description=この認証情報を適用するポート。認証情報があらゆるポートに適用可能な場合はマイナス値を設定します。
auth_port_widget.label=ポート
#auth_password_widget.description=認証を行うユーザーのパスワード。
auth_password_widget.label=パスワード
auth_preemptive_widget.description=チェックした場合、クライアントは先制して対応する認証ヘッダー情報を送信します。
auth_preemptive_widget.label=プリエンプティブ（先制）
auth_realm_widget.description=この認証情報を適用する範囲。認証情報があらゆるレルムに適用可能な場合は空白またはnullにします。
auth_realm_widget.label=レルム
#auth_username_widget.description=認証を行うユーザーのユーザー名。
auth_username_widget.label=ユーザー名
authenticationPage.pageDescription=RESTコネクタの認証オプションを設定します。
authenticationPage.pageTitle=認証の設定
bodyWidget.description=HTTPのペイロードデータは、ヘッダーの直後にある\nHTTPトランザクション メッセージで伝送されるバイトデータです。
bodyWidget.label=ペイロード(Payload)
charsetWidget.description=ペイロード内で使用される文字セット。
charsetWidget.label=文字セット
contentTypeWidget.description=ペイロード内で使用されるContent-Type
contentTypeWidget.label=コンテンツタイプ
do_not_follow_redirect_widget.label=自動でリダイレクトを行わない
hostname_verifier_widget.description=URLのホスト名とサーバーのホスト識別名が不一致の場合、\nハンドシェイク時にこの検証機構が使用されます。
hostname_verifier_widget.label=ホスト名の検証
ignore_body_widget.description=チェックした場合、レスポンスbodyは破壊されます。
ignore_body_widget.label=bodyを無視
key_store.description=暗号化キーと証明書の保管場所
key_store.label=キーストア（JKS形式）
key_store_file_widget.description=キーストアのファイルパス
key_store_file_widget.label=キーストア ファイル
#key_store_password_widget.description=キーストアのパスワード
key_store_password_widget.label=キーストア パスワード
portWidget.description=リクエストを適用するRESTサービスURLのポート
portWidget.label=ポート
ssl.description=Secure Sockets Layer (SSL) は、インターネット上のセキュアなコミュニケーションを提供するためにデザインされた暗号プロトコルです。
ssl.label=全般
TLS_widget.description=チェックした場合、レガシーの SSLプロトコルの代わりに TLS が使用されます。
TLS_widget.label=TLS
trust_self_signed_certificate_widget.description=（暗号化コンピュータセキュリティ）発行者と主体者が同一実体で\n署名された自己署名証明書。
trust_self_signed_certificate_widget.label=自己署名証明書を信頼する
trust_store.description=他の当事者からの証明書を含む。
trust_store.label=トラストストア（JKS形式）
trust_store_file_widget.description=トラストストアのファイルパス
trust_store_file_widget.label=トラストストア ファイル
#trust_store_password_widget.description=トラストストアのパスワード
trust_store_password_widget.label=トラストストア パスワード
Advanced.pageTitle=オプション追加情報の設定
Advanced.pageDescription=PUTリクエストの追加情報を設定します。
urlCookiesWidget.description=Webサイトを閲覧中、利用者のWebブラウザにデータを書き込んで\n保存し、Webサイト閲覧時に取得する小さいデータ。
urlCookiesWidget.label=Cookie
urlHeadersWidget.description=HTTP ヘッダー: HTTP リクエストの最初の部分。 \n最も一般的なヘッダーは、Host, User-Agent, Location など。
urlHeadersWidget.label=ヘッダー
urlWidget.description=リクエストに適用するリソースを特定するRESTサーバーURL
urlWidget.label=PUT URL
proxyPage.pageDescription=任意のプロキシを設定します。
proxyPage.pageTitle=プロキシの設定
proxy_host_widget.label=ホスト
#proxy_host_widget.description=プロキシ・サーバーのホスト名
proxy_port_widget.label=ポート
#proxy_port_widget.description=プロキシ・サーバーのポート番号
proxy_protocol_widget.label=プロトコル
#proxy_protocol_widget.description=プロキシ・サーバーの接続中に使用されるプロトコル
proxy_username_widget.label=ユーザー名
#proxy_username_widget.description=プロキシ・サーバーから認証が要求される場合のユーザー名
proxy_password_widget.label=パスワード
#proxy_password_widget.description=プロキシ・サーバーから認証が要求される場合のパスワード
outputsDescription=レスポンスの Content-Type が JSON 互換の場合、スクリプトでデータを素早くアクセスするには、'bodyAsObject' output (例: bodyAsObject.user.name または bodyAsObject[0].userName)を使用します。その他の場合は、'bodyAsString' output を使用します。
